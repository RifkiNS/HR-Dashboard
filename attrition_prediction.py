# -*- coding: utf-8 -*-
"""Attrition Prediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1AQY4xE2lmHHeyf6-aU7KACSWeC0HBV9c

### Menginstall library SHAP ###
Library ini tidak ada dalam google colab sehingga harus diinstall terlebih dahulu
"""

!pip install shap

"""### Mengimport Libarary Yang Digunakan
tahap ini melakukan deklarasi atau importing library yang akan digunakan
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import shap
import joblib
from sklearn.preprocessing import LabelEncoder
from sklearn.model_selection import train_test_split
from xgboost import XGBClassifier
from sklearn.metrics import accuracy_score
from sklearn.compose import ColumnTransformer
from sklearn.pipeline import Pipeline

"""### Menyiapkan Dataset Yang Digunakan
Tahapkan melakukan loading dataset yang berasal dari github dicoding academy
"""

df_employee = pd.read_csv('https://raw.githubusercontent.com/dicodingacademy/dicoding_dataset/main/employee/employee_data.csv')
df_employee.head()

"""### Assesing Data
Tahap ini adalah tahap data wrangling yang berguna untuk menilai kulitas dan melihat data type pada dataset. Proses ini menggunakan beberapa function dari pandas seperti describe() untuk mengeksplorasi dataset, info() untuk melihat tipe data setiap kolum apakah sudah sesuai atau belum, isnull() untuk mengidentifikasi adanya missing value atau tidak, duplicated() untuk mengidentifikasi adanya data yang duplikat atau tidak dan sum() untuk menghitung jumlah missing value ataupun data yang duplikat.
"""

df_employee.describe()

df_employee.info()

"""data type pada dataset ini sudah sesuai"""

df_employee.isnull().sum()

"""terdapat missing value pada kolom Attrition"""

df_employee.duplicated().sum()

"""dataset ini tidak ada data yang duplikat

### Exploratory Data Analysis (EDA)
Tahap ini dilakukan untuk mengenal dataset yang digunakan. Pada submission ini hanya melakukan 2 EDA saja yaitu melihat korelasi antar kolom pada dataset dan melihat persebaran dataset numerik.
"""

num_cols = df_employee.select_dtypes(include=['int64', 'float64']).columns.tolist()

plt.figure(figsize=(20,15))
corr_amtrix = df_employee[num_cols].corr()
sns.heatmap(corr_amtrix, annot=True, cmap='coolwarm')
plt.title("Correlation Matrix")
plt.show()

df_employee[num_cols].hist(figsize=(25,15), bins=20)
plt.tight_layout()
plt.show()

"""persebaran dataset secara diminan memiliki peresebaran yang tidak terdistribusi normal

### Data Preprparation
Tahap ini menyiapkan data sebelum dilakukan modeling yang bertujuan untuk mengatasi missing value, melakukan encoded, feature selection dan melakukan splitting data.

menghilangkan missing value pada kolom Attrition
"""

df_employee.dropna(subset='Attrition', inplace=True)

"""filtering data kategorikal untuk dilakukan encoded menggunakan LabelEncoder()"""

cat_cols = df_employee.select_dtypes(include=['object']).columns.tolist()

encoder = LabelEncoder()
for col in cat_cols:
    df_employee[col] = encoder.fit_transform(df_employee[col])

df_employee.head()

"""melakukan feature selection dan splitting dataset"""

X = df_employee[['OverTime', 'EducationField', 'Age', 'JobRole',  'MonthlyIncome', 'MaritalStatus', 'EnvironmentSatisfaction', 'JobSatisfaction', 'Education', 'PerformanceRating', 'RelationshipSatisfaction', 'NumCompaniesWorked']]
y = df_employee['Attrition']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

"""Modeling

Submsiion ini melakukan modeling menggunakan algortima XGBClassifier() untuk melakukan klasifikasi karyawan yang akan regin.
"""

xgb_model = XGBClassifier()
xgb_model.fit(X_train, y_train)

y_pred = xgb_model.predict(X_test)

accuracy = accuracy_score(y_test, y_pred)
print(f'Akurasi: {accuracy}')

"""### SHAP Analisis
Tahap ini melakukan analisis SHAP summary plot untuk melihat pengaruh karyawan resign
"""

explainer = shap.TreeExplainer(xgb_model)
shap_values = explainer.shap_values(X_test)


shap.summary_plot(shap_values, X_test)


shap.force_plot(explainer.expected_value, shap_values[0], X_test.iloc[0])

"""Berdasarkan Hasil SHAP summary plot menunjukkan bahwa OverTime, MonthlyIncome, MartialStatus, dan Age adalah fitur terpenting dalam memprediksi attrition. Karyawan dengan jam lembur tinggi dan pendapatan rendah cenderung memiliki kemungkinan lebih tinggi untuk resign.

### Save Model Dan Deployment Sederhana
"""

joblib.dump(xgb_model, 'xgb_model.pkl')

model = joblib.load('xgb_model.pkl')

sample = df_employee.sample(5, random_state=42)
sample_for_prediction = sample[['OverTime', 'EducationField', 'Age', 'JobRole',  'MonthlyIncome', 'MaritalStatus', 'EnvironmentSatisfaction', 'JobSatisfaction', 'Education', 'PerformanceRating', 'RelationshipSatisfaction', 'NumCompaniesWorked']]
predictions = model.predict(sample_for_prediction)
sample['Attrition_Prediction'] = ['Resign' if p == 1 else 'Stay' for p in predictions]
sample